{"version":3,"file":"SkewHeap.js","sources":["../src/SkewHeap.ts"],"sourcesContent":["import type { Comparator } from \"./comparator\";\nimport { defaultComparator } from \"./comparator\";\nimport type {\n  PriorityQueueInstance,\n  PriorityQueueOption,\n  PriorityQueueStatic,\n} from \"./PriorityQueue\";\nimport { BasePriorityQueue } from \"./PriorityQueue\";\n\ntype Node<T> = {\n  value: T;\n  left: Node<T> | null;\n  right: Node<T> | null;\n};\n\nfunction createNode<T>(value: T): Node<T> {\n  return {\n    value,\n    left: null,\n    right: null,\n  };\n}\n\nfunction traverse<T>(node: Node<T> | null): T[] {\n  if (!node) return [];\n  return [...traverse(node.left), node.value, ...traverse(node.right)];\n}\n\nfunction merge<T>(\n  a: Node<T> | null,\n  b: Node<T> | null,\n  comparator: Comparator<T>\n): Node<T> | null {\n  if (!a || !b) return a || b;\n  if (comparator(a.value, b.value) < 0) {\n    return merge(b, a, comparator);\n  }\n  a.right = merge(a.right, b, comparator);\n  const t = a.right;\n  a.right = a.left;\n  a.left = t;\n  return a;\n}\n\n/**\n * An implementation of Skew Heap.\n */\nexport default class SkewHeap<T>\n  extends BasePriorityQueue\n  implements PriorityQueueInstance<T>\n{\n  comparator: Comparator<T>;\n  root: Node<T> | null = null;\n\n  _length = 0;\n\n  static from<U>(array: U[], option: PriorityQueueOption<U> = {}): SkewHeap<U> {\n    const instance = new SkewHeap<U>(option);\n    for (let i = 0, l = array.length; i < l; ++i) {\n      instance.push(array[i]);\n    }\n    return instance;\n  }\n\n  constructor({ comparator = defaultComparator }: PriorityQueueOption<T> = {}) {\n    super(\"SkewHeap\");\n    this.comparator = comparator;\n  }\n\n  clear(): void {\n    this._length = 0;\n    this.root = null;\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  push(val: T): void {\n    this.root = merge(this.root, createNode(val), this.comparator);\n    this._length += 1;\n  }\n\n  top(): T {\n    if (!this.root) {\n      throw new Error(\"invalid operation: top() called for empty SkewHeap\");\n    }\n    return this.root.value;\n  }\n\n  pop(): T {\n    if (!this.root) {\n      throw new Error(\"invalid operation: pop() called for empty SkewHeap\");\n    }\n    const ret = this.root.value;\n    this.root = merge(this.root.right, this.root.left, this.comparator);\n    this._length -= 1;\n    return ret;\n  }\n\n  merge<Instance extends PriorityQueueInstance<T>>(other: Instance): void {\n    if (other instanceof SkewHeap && this.comparator === other.comparator) {\n      this.root = merge(this.root, other.root, this.comparator);\n      this._length += other.length;\n      other.clear();\n      return;\n    }\n    for (let i = 0, a = other.toArray(), l = a.length; i < l; ++i) {\n      this.push(a[i]);\n    }\n    other.clear();\n  }\n\n  toArray(): T[] {\n    return traverse(this.root).sort(this.comparator);\n  }\n\n  isEmpty(): boolean {\n    return !this.root;\n  }\n}\nconst check: PriorityQueueStatic = SkewHeap;\nif (check === SkewHeap) {\n  // noop\n}\n"],"names":["createNode","value","traverse","node","merge","a","b","comparator","t","SkewHeap","BasePriorityQueue","defaultComparator","__publicField","array","option","instance","i","l","val","ret","other"],"mappings":"gUAeA,SAASA,EAAcC,EAAmB,CACjC,MAAA,CACL,MAAAA,EACA,KAAM,KACN,MAAO,IAAA,CAEX,CAEA,SAASC,EAAYC,EAA2B,CAC9C,OAAKA,EACE,CAAC,GAAGD,EAASC,EAAK,IAAI,EAAGA,EAAK,MAAO,GAAGD,EAASC,EAAK,KAAK,CAAC,EADjD,EAEpB,CAEA,SAASC,EACPC,EACAC,EACAC,EACgB,CACZ,GAAA,CAACF,GAAK,CAACC,EAAG,OAAOD,GAAKC,EAC1B,GAAIC,EAAWF,EAAE,MAAOC,EAAE,KAAK,EAAI,EAC1B,OAAAF,EAAME,EAAGD,EAAGE,CAAU,EAE/BF,EAAE,MAAQD,EAAMC,EAAE,MAAOC,EAAGC,CAAU,EACtC,MAAMC,EAAIH,EAAE,MACZ,OAAAA,EAAE,MAAQA,EAAE,KACZA,EAAE,KAAOG,EACFH,CACT,CAKA,MAAqBI,UACXC,EAAAA,iBAEV,CAcE,YAAY,CAAEH,WAAAA,EAAaI,EAAkB,iBAAA,EAA4B,CAAA,EAAI,CAC3E,MAAM,UAAU,EAdlBC,EAAA,mBACAA,EAAA,YAAuB,MAEvBA,EAAA,eAAU,GAYR,KAAK,WAAaL,CACpB,CAXA,OAAO,KAAQM,EAAYC,EAAiC,GAAiB,CACrE,MAAAC,EAAW,IAAIN,EAAYK,CAAM,EAC9B,QAAAE,EAAI,EAAGC,EAAIJ,EAAM,OAAQG,EAAIC,EAAG,EAAED,EAChCD,EAAA,KAAKF,EAAMG,EAAE,EAEjB,OAAAD,CACT,CAOA,OAAc,CACZ,KAAK,QAAU,EACf,KAAK,KAAO,IACd,CAEA,IAAI,QAAiB,CACnB,OAAO,KAAK,OACd,CAEA,KAAKG,EAAc,CACZ,KAAA,KAAOd,EAAM,KAAK,KAAMJ,EAAWkB,CAAG,EAAG,KAAK,UAAU,EAC7D,KAAK,SAAW,CAClB,CAEA,KAAS,CACH,GAAA,CAAC,KAAK,KACF,MAAA,IAAI,MAAM,oDAAoD,EAEtE,OAAO,KAAK,KAAK,KACnB,CAEA,KAAS,CACH,GAAA,CAAC,KAAK,KACF,MAAA,IAAI,MAAM,oDAAoD,EAEhE,MAAAC,EAAM,KAAK,KAAK,MACjB,YAAA,KAAOf,EAAM,KAAK,KAAK,MAAO,KAAK,KAAK,KAAM,KAAK,UAAU,EAClE,KAAK,SAAW,EACTe,CACT,CAEA,MAAiDC,EAAuB,CACtE,GAAIA,aAAiBX,GAAY,KAAK,aAAeW,EAAM,WAAY,CACrE,KAAK,KAAOhB,EAAM,KAAK,KAAMgB,EAAM,KAAM,KAAK,UAAU,EACxD,KAAK,SAAWA,EAAM,OACtBA,EAAM,MAAM,EACZ,MACF,CACA,QAASJ,EAAI,EAAGX,EAAIe,EAAM,QAAQ,EAAGH,EAAIZ,EAAE,OAAQW,EAAIC,EAAG,EAAED,EACrD,KAAA,KAAKX,EAAEW,EAAE,EAEhBI,EAAM,MAAM,CACd,CAEA,SAAe,CACb,OAAOlB,EAAS,KAAK,IAAI,EAAE,KAAK,KAAK,UAAU,CACjD,CAEA,SAAmB,CACjB,MAAO,CAAC,KAAK,IACf,CACF"}