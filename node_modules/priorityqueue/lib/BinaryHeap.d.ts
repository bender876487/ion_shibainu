import { BasePriorityQueue } from "./PriorityQueue";
import type { PriorityQueueInstance, PriorityQueueOption } from "./PriorityQueue";
import type { Comparator } from "./comparator";
/**
 * An implementation of Binary Heap.
 */
export default class BinaryHeap<T> extends BasePriorityQueue implements PriorityQueueInstance<T> {
    comparator: Comparator<T>;
    collection: T[];
    static from<U>(array: U[], option?: PriorityQueueOption<U>): BinaryHeap<U>;
    constructor({ comparator }?: PriorityQueueOption<T>);
    clear(): void;
    toArray(): T[];
    get length(): number;
    top(): T;
    pop(): T;
    push(value: T): void;
    merge<Instance extends PriorityQueueInstance<T>>(other: Instance): void;
    isEmpty(): boolean;
}
