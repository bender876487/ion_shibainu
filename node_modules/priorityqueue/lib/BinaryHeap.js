"use strict";var f=Object.defineProperty;var u=(o,e,t)=>e in o?f(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var c=(o,e,t)=>(u(o,typeof e!="symbol"?e+"":e,t),t);Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const a=require("./comparator.21efe408.js");function g(o,e,t){const r=e*2,l=e*2+1;let i=e;return r<o.length&&t(o[i],o[r])<0&&(i=r),l<o.length&&t(o[i],o[l])<0&&(i=l),i}function s(o,e,t){const r=g(o,e,t);if(r!==e){const l=o[e];o[e]=o[r],o[r]=l,s(o,r,t)}}function h(o){for(let e=Math.floor(o.collection.length/2)-1;e>=0;--e)s(o.collection,e,o.comparator)}class n extends a.BasePriorityQueue{constructor({comparator:t=a.defaultComparator}={}){super("BinaryHeap");c(this,"comparator");c(this,"collection",[]);this.comparator=t}static from(t,r={}){const l=new n(r);return l.collection=Array.from(t),h(l),l}clear(){this.collection.length=0}toArray(){return[...this.collection].sort(this.comparator)}get length(){return this.collection.length}top(){if(this.length===0)throw new Error("invalid operation: top() called for empty BinaryHeap");return this.collection[0]}pop(){if(this.length===0)throw new Error("invalid operation: pop() called for empty BinaryHeap");const t=this.collection[0];return this.collection.length>1?(this.collection[0]=this.collection.pop(),s(this.collection,0,this.comparator)):this.collection.pop(),t}push(t){this.collection.push(t);const r=this.collection;for(let l=r.length-1,i=Math.floor(l/2);l>0&&this.comparator(r[i],r[l])<0;l=i,i=Math.floor(i/2)){const p=r[l];r[l]=r[i],r[i]=p}}merge(t){t instanceof n?this.collection=this.collection.concat(t.collection):this.collection=this.collection.concat(t.toArray()),h(this),t.clear()}isEmpty(){return!this.collection.length}}exports.default=n;
//# sourceMappingURL=BinaryHeap.js.map
