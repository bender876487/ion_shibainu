{"version":3,"file":"SkewHeap.mjs","sources":["../src/SkewHeap.ts"],"sourcesContent":["import type { Comparator } from \"./comparator\";\nimport { defaultComparator } from \"./comparator\";\nimport type {\n  PriorityQueueInstance,\n  PriorityQueueOption,\n  PriorityQueueStatic,\n} from \"./PriorityQueue\";\nimport { BasePriorityQueue } from \"./PriorityQueue\";\n\ntype Node<T> = {\n  value: T;\n  left: Node<T> | null;\n  right: Node<T> | null;\n};\n\nfunction createNode<T>(value: T): Node<T> {\n  return {\n    value,\n    left: null,\n    right: null,\n  };\n}\n\nfunction traverse<T>(node: Node<T> | null): T[] {\n  if (!node) return [];\n  return [...traverse(node.left), node.value, ...traverse(node.right)];\n}\n\nfunction merge<T>(\n  a: Node<T> | null,\n  b: Node<T> | null,\n  comparator: Comparator<T>\n): Node<T> | null {\n  if (!a || !b) return a || b;\n  if (comparator(a.value, b.value) < 0) {\n    return merge(b, a, comparator);\n  }\n  a.right = merge(a.right, b, comparator);\n  const t = a.right;\n  a.right = a.left;\n  a.left = t;\n  return a;\n}\n\n/**\n * An implementation of Skew Heap.\n */\nexport default class SkewHeap<T>\n  extends BasePriorityQueue\n  implements PriorityQueueInstance<T>\n{\n  comparator: Comparator<T>;\n  root: Node<T> | null = null;\n\n  _length = 0;\n\n  static from<U>(array: U[], option: PriorityQueueOption<U> = {}): SkewHeap<U> {\n    const instance = new SkewHeap<U>(option);\n    for (let i = 0, l = array.length; i < l; ++i) {\n      instance.push(array[i]);\n    }\n    return instance;\n  }\n\n  constructor({ comparator = defaultComparator }: PriorityQueueOption<T> = {}) {\n    super(\"SkewHeap\");\n    this.comparator = comparator;\n  }\n\n  clear(): void {\n    this._length = 0;\n    this.root = null;\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  push(val: T): void {\n    this.root = merge(this.root, createNode(val), this.comparator);\n    this._length += 1;\n  }\n\n  top(): T {\n    if (!this.root) {\n      throw new Error(\"invalid operation: top() called for empty SkewHeap\");\n    }\n    return this.root.value;\n  }\n\n  pop(): T {\n    if (!this.root) {\n      throw new Error(\"invalid operation: pop() called for empty SkewHeap\");\n    }\n    const ret = this.root.value;\n    this.root = merge(this.root.right, this.root.left, this.comparator);\n    this._length -= 1;\n    return ret;\n  }\n\n  merge<Instance extends PriorityQueueInstance<T>>(other: Instance): void {\n    if (other instanceof SkewHeap && this.comparator === other.comparator) {\n      this.root = merge(this.root, other.root, this.comparator);\n      this._length += other.length;\n      other.clear();\n      return;\n    }\n    for (let i = 0, a = other.toArray(), l = a.length; i < l; ++i) {\n      this.push(a[i]);\n    }\n    other.clear();\n  }\n\n  toArray(): T[] {\n    return traverse(this.root).sort(this.comparator);\n  }\n\n  isEmpty(): boolean {\n    return !this.root;\n  }\n}\nconst check: PriorityQueueStatic = SkewHeap;\nif (check === SkewHeap) {\n  // noop\n}\n"],"names":["createNode","value","traverse","node","merge","a","b","comparator","t","SkewHeap","BasePriorityQueue","defaultComparator","__publicField","array","option","instance","i","l","val","ret","other"],"mappings":";;;;AAeA,SAASA,EAAcC,GAAmB;AACjC,SAAA;AAAA,IACL,OAAAA;AAAA,IACA,MAAM;AAAA,IACN,OAAO;AAAA,EAAA;AAEX;AAEA,SAASC,EAAYC,GAA2B;AAC9C,SAAKA,IACE,CAAC,GAAGD,EAASC,EAAK,IAAI,GAAGA,EAAK,OAAO,GAAGD,EAASC,EAAK,KAAK,CAAC,IADjD;AAEpB;AAEA,SAASC,EACPC,GACAC,GACAC,GACgB;AACZ,MAAA,CAACF,KAAK,CAACC;AAAG,WAAOD,KAAKC;AAC1B,MAAIC,EAAWF,EAAE,OAAOC,EAAE,KAAK,IAAI;AAC1B,WAAAF,EAAME,GAAGD,GAAGE,CAAU;AAE/B,EAAAF,EAAE,QAAQD,EAAMC,EAAE,OAAOC,GAAGC,CAAU;AACtC,QAAMC,IAAIH,EAAE;AACZ,SAAAA,EAAE,QAAQA,EAAE,MACZA,EAAE,OAAOG,GACFH;AACT;AAKA,MAAqBI,UACXC,EAEV;AAAA,EAcE,YAAY,EAAE,YAAAH,IAAaI,EAAkB,IAA4B,CAAA,GAAI;AAC3E,UAAM,UAAU;AAdlB,IAAAC,EAAA;AACA,IAAAA,EAAA,cAAuB;AAEvB,IAAAA,EAAA,iBAAU;AAYR,SAAK,aAAaL;AAAA,EACpB;AAAA,EAXA,OAAO,KAAQM,GAAYC,IAAiC,IAAiB;AACrE,UAAAC,IAAW,IAAIN,EAAYK,CAAM;AAC9B,aAAAE,IAAI,GAAGC,IAAIJ,EAAM,QAAQG,IAAIC,GAAG,EAAED;AAChC,MAAAD,EAAA,KAAKF,EAAMG,EAAE;AAEjB,WAAAD;AAAA,EACT;AAAA,EAOA,QAAc;AACZ,SAAK,UAAU,GACf,KAAK,OAAO;AAAA,EACd;AAAA,EAEA,IAAI,SAAiB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,KAAKG,GAAc;AACZ,SAAA,OAAOd,EAAM,KAAK,MAAMJ,EAAWkB,CAAG,GAAG,KAAK,UAAU,GAC7D,KAAK,WAAW;AAAA,EAClB;AAAA,EAEA,MAAS;AACH,QAAA,CAAC,KAAK;AACF,YAAA,IAAI,MAAM,oDAAoD;AAEtE,WAAO,KAAK,KAAK;AAAA,EACnB;AAAA,EAEA,MAAS;AACH,QAAA,CAAC,KAAK;AACF,YAAA,IAAI,MAAM,oDAAoD;AAEhE,UAAAC,IAAM,KAAK,KAAK;AACjB,gBAAA,OAAOf,EAAM,KAAK,KAAK,OAAO,KAAK,KAAK,MAAM,KAAK,UAAU,GAClE,KAAK,WAAW,GACTe;AAAA,EACT;AAAA,EAEA,MAAiDC,GAAuB;AACtE,QAAIA,aAAiBX,KAAY,KAAK,eAAeW,EAAM,YAAY;AACrE,WAAK,OAAOhB,EAAM,KAAK,MAAMgB,EAAM,MAAM,KAAK,UAAU,GACxD,KAAK,WAAWA,EAAM,QACtBA,EAAM,MAAM;AACZ;AAAA,IACF;AACA,aAASJ,IAAI,GAAGX,IAAIe,EAAM,QAAQ,GAAGH,IAAIZ,EAAE,QAAQW,IAAIC,GAAG,EAAED;AACrD,WAAA,KAAKX,EAAEW,EAAE;AAEhB,IAAAI,EAAM,MAAM;AAAA,EACd;AAAA,EAEA,UAAe;AACb,WAAOlB,EAAS,KAAK,IAAI,EAAE,KAAK,KAAK,UAAU;AAAA,EACjD;AAAA,EAEA,UAAmB;AACjB,WAAO,CAAC,KAAK;AAAA,EACf;AACF;"}